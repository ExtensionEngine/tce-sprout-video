{"version":3,"file":"tce-api-video.umd.min.js","sources":["../src/upload.js","../src/shared/index.js","../node_modules/vue-runtime-helpers/dist/normalize-component.js","../src/info.js","../src/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst CHUNK_SIZE = 64 * 1024 * 1024; // 64MB\n\nexport default function upload({ url, file, videoId }) {\n  const { size } = file;\n  if (CHUNK_SIZE > file.size) return post({ url, videoId, chunk: file });\n  const chunks = createChunks(file);\n  return Promise.all(chunks.map(it => post({ url, videoId, size, ...it })));\n}\n\nfunction createChunks(file) {\n  const chunks = [];\n  const { size } = file;\n  for (let offset = 0; offset < size; offset += CHUNK_SIZE) {\n    const end = Math.min(offset + CHUNK_SIZE, size);\n    const chunk = file.slice(offset, end);\n    chunks.push({ chunk, offset, end });\n  }\n  return chunks;\n}\n\nfunction post({ url, videoId, chunk, size, offset, end }) {\n  const headers = {\n    'Content-Type': 'multipart/form-data'\n  };\n  if (offset !== undefined && end !== undefined) {\n    headers['Content-Range'] = `bytes ${offset}-${end - 1}/${size}`;\n  }\n  const formData = new FormData();\n  formData.append('file', chunk);\n  formData.append('videoId', videoId);\n  return axios.post(url, formData, { headers });\n}\n","const ELEMENT_STATE = {\n  UPLOADING: 'UPLOADING',\n  UPLOADED: 'UPLOADED'\n};\n\nmodule.exports = { ELEMENT_STATE };\n","'use strict';\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nmodule.exports = normalizeComponent;\n//# sourceMappingURL=normalize-component.js.map\n","module.exports = {\n  name: 'Api Video',\n  type: 'API_VIDEO',\n  version: '1.0'\n};\n","import Edit from './edit/index.vue';\nimport info from './info';\nimport Toolbar from './edit/Toolbar.vue';\n\nconst initState = () => ({\n  fileName: null,\n  videoId: null,\n  playable: false,\n  status: null,\n  error: null\n});\n\nexport { Edit, Toolbar };\n\n/**\n * The fields that need to be customized are:\n * name: a string that is displayed to a user in the editor\n * ui->icon: a string representing the name of the MDI (https://materialdesignicons.com/)\n * icon that is displayed to the user in the editor\n * ui->forceFullWidth: a boolean value which defines if the element can only be\n * added as full width element\n */\nexport default {\n  ...info,\n  initState,\n  components: { Edit, Toolbar },\n  ui: {\n    icon: 'mdi-video',\n    forceFullWidth: true\n  }\n};\n"],"names":["upload","url","file","videoId","size","post","chunk","chunks","offset","end","Math","min","slice","push","createChunks","Promise","all","map","it","headers","undefined","formData","FormData","append","axios","UPLOADING","UPLOADED","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","options","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","name","type","version","initState","fileName","playable","status","error","components","Edit","Toolbar","ui","icon","forceFullWidth"],"mappings":"ghBAIe,SAASA,SAASC,IAAAA,IAAKC,IAAAA,KAAMC,IAAAA,QAClCC,EAASF,EAATE,QAHS,SAIAF,EAAKE,KAAM,OAAOC,EAAK,CAAEJ,IAAAA,EAAKE,QAAAA,EAASG,MAAOJ,QACzDK,EAIR,SAAsBL,WACdK,EAAS,GACPH,EAASF,EAATE,KACCI,EAAS,EAAGA,EAASJ,EAAMI,GAZnB,SAYyC,KAClDC,EAAMC,KAAKC,IAAIH,EAbN,SAa2BJ,GACpCE,EAAQJ,EAAKU,MAAMJ,EAAQC,GACjCF,EAAOM,KAAK,CAAEP,MAAAA,EAAOE,OAAAA,EAAQC,IAAAA,WAExBF,EAZQO,CAAaZ,UACrBa,QAAQC,IAAIT,EAAOU,KAAI,SAAAC,UAAMb,iBAAOJ,IAAAA,EAAKE,QAAAA,EAASC,KAAAA,GAASc,QAcpE,SAASb,SAAOJ,IAAAA,IAAKE,IAAAA,QAASG,IAAAA,MAAOF,IAAAA,KAAMI,IAAAA,OAAQC,IAAAA,IAC3CU,EAAU,gBACE,4BAEHC,IAAXZ,QAAgCY,IAARX,IAC1BU,EAAQ,iCAA4BX,cAAUC,EAAM,cAAKL,QAErDiB,EAAW,IAAIC,gBACrBD,EAASE,OAAO,OAAQjB,GACxBe,EAASE,OAAO,UAAWpB,GACpBqB,UAAMnB,KAAKJ,EAAKoB,EAAU,CAAEF,QAAAA,IChCrC,MAAsB,CACpBM,UAAW,YACXC,SAAU,YCmFZ,MAnFA,SAA4BC,EAAUC,EAAOC,EAAQC,EAASC,EAAsBC,EAElFC,EAAYC,EAAgBC,EAAmBC,GACrB,kBAAfH,IACTE,EAAoBD,EACpBA,EAAiBD,EACjBA,GAAa,GAIf,IAiBII,EAjBAC,EAA4B,mBAAXT,EAAwBA,EAAOS,QAAUT,EAsD9D,GApDIF,GAAYA,EAASY,SACvBD,EAAQC,OAASZ,EAASY,OAC1BD,EAAQE,gBAAkBb,EAASa,gBACnCF,EAAQG,WAAY,EAEhBV,IACFO,EAAQI,YAAa,IAKrBZ,IACFQ,EAAQK,SAAWb,GAKjBE,GAEFK,EAAO,SAAcO,IAEnBA,EAAUA,GACVC,KAAKC,QAAUD,KAAKC,OAAOC,YAC3BF,KAAKG,QAAUH,KAAKG,OAAOF,QAAUD,KAAKG,OAAOF,OAAOC,aAGT,oBAAxBE,sBACrBL,EAAUK,qBAIRrB,GACFA,EAAMsB,KAAKL,KAAMV,EAAkBS,IAIjCA,GAAWA,EAAQO,uBACrBP,EAAQO,sBAAsBC,IAAIpB,IAMtCM,EAAQe,aAAehB,GACdT,IACTS,EAAOJ,EAAa,WAClBL,EAAMsB,KAAKL,KAAMT,EAAqBS,KAAKS,MAAMC,SAASC,cACxD,SAAUZ,GACZhB,EAAMsB,KAAKL,KAAMX,EAAeU,MAIhCP,EACF,GAAIC,EAAQI,WAAY,CAEtB,IAAIe,EAAiBnB,EAAQC,OAE7BD,EAAQC,OAAS,SAAkCmB,EAAGd,GAEpD,OADAP,EAAKa,KAAKN,GACHa,EAAeC,EAAGd,QAEtB,CAEL,IAAIe,EAAWrB,EAAQsB,aACvBtB,EAAQsB,aAAeD,EAAW,GAAGE,OAAOF,EAAUtB,GAAQ,CAACA,GAInE,OAAOR,++OClFQ,CACfiC,KAAM,YACNC,KAAM,YACNC,QAAS,QCqBTC,UApBgB,iBAAO,CACvBC,SAAU,KACV/D,QAAS,KACTgE,UAAU,EACVC,OAAQ,KACRC,MAAO,OAgBPC,WAAY,CAAEC,KAAAA,EAAMC,QAAAA,GACpBC,GAAI,CACFC,KAAM,YACNC,gBAAgB"}